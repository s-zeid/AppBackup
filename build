#!/bin/bash

# AppBackup
# An iPhoneOS application that backs up and restores the saved data and
# preferences of App Store apps.
#
# Copyright (C) 2008-2012 Scott Zeid
# http://me.srwz.us/iphone/appbackup
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# 
# Except as contained in this notice, the name(s) of the above copyright holders
# shall not be used in advertising or otherwise to promote the sale, use or
# other dealings in this Software without prior written authorization.

cd "$(dirname "$0")"

CC=""; OLD_DEBS=""
[ -f "config" ] && . ./config
[ -n "$CC" -a -f "$CC" -a -x "$CC" ]; USE_CC=$?

DEVICE=$1
PREFIX=$2

if [ "$DEVICE" = "" -a $USE_CC -eq 0 ]; then
 echo "CC is enabled; the first argument should be your device's network address"
 exit 2
elif [ $USE_CC -eq 1 -a "$PREFIX" = "" ]; then
 DEVICE=""
 PREFIX=$1
fi

# Compile AppBackupGUI and FixPermissions if $CC is set, exists, and is
# executable
if [ $USE_CC -eq 0 ]; then
 # AppBackupGUI
 cd src/gui
 make clean
 make CC="$CC" LD="$CC" DEVICE="$DEVICE"
 rm ./*.o
 cd ../..
 # FixPermissions
 cd src/FixPermissions
 make clean
 make CC="$CC" LD="$CC" DEVICE="$DEVICE"
 cd ../..
fi

# Clean up old deb files if $OLD_DEBS is set
if [ "$OLD_DEBS" = "/dev/null" ]; then
 rm ./*.deb
elif [ ! "$OLD_DEBS" = "" -a -d "$OLD_DEBS" ]; then
 mv ./*.deb "$OLD_DEBS" &>/dev/null
fi

# Temporary directory for .deb building
mkdir debtmp &>/dev/null
cd debtmp
rm ./*.deb &>/dev/null

# Copying and symlinking and stuff
mkdir -p files/Applications/AppBackup.app/js
mkdir -p files/Applications/AppBackup.app/python
mkdir -p files/DEBIAN
mkdir -p files/usr
cp -a ../DEBIAN/* files/DEBIAN/
cp -a ../src/bundle/* files/Applications/AppBackup.app/
cp -a ../src/FixPermissions/FixPermissions files/Applications/AppBackup.app/
cp -a ../src/gui/AppBackupGUI files/Applications/AppBackup.app/AppBackupGUI_
../i18n/ini-to-strings.py ../i18n files/Applications/AppBackup.app
cp -a ../src/python/* files/Applications/AppBackup.app/python
cp -a ../src/usr/* files/usr/
cp -a ../CHANGELOG files/Applications/AppBackup.app/
cp -a ../CREDITS files/Applications/AppBackup.app/
cp -a ../LICENSE files/Applications/AppBackup.app/
rm files/Applications/AppBackup.app/python/{,appbackup,CFPropertyList,simplejson}/*.py[co] &>/dev/null
chmod +x files/Applications/AppBackup.app/appbackup-cli
chmod +x files/Applications/AppBackup.app/AppBackupGUI{,_}
chmod +x files/usr/bin/appbackup{,-fix-permissions}
touch files/Applications/AppBackup.app/about.html
../src/about-html/make-about-html.py > files/Applications/AppBackup.app/about.html

# Build .deb and move it
dpkg-deb -b files .
DEBFILE=`ls | grep .deb`
mv $DEBFILE ../$PREFIX$DEBFILE
cd ..

# Clean up
rm -r debtmp
